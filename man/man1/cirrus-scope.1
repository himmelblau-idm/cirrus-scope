.TH CIRRUS-SCOPE "1" "2025-07-10" "cirrus-scope" "User Commands"
.SH NAME
cirrus-scope \- diagnostic utility for debugging Entra ID authentication issues via libhimmelblau
.SH SYNOPSIS
.B cirrus-scope
\fI<COMMAND>\fR [OPTIONS]
.SH DESCRIPTION
cirrus-scope is a command-line utility designed to help Himmelblau users and developers diagnose and investigate authentication issues when using libhimmelblau integration with Azure Entra ID.

It provides targeted test commands to simulate login, device enrollment, token refresh, and Hello for Business key provisioning. This tool collects debug output and enables packet capture through optional proxy configuration, making it easier to share failure context with Himmelblau maintainers.

Authentication input (such as usernames and passwords) is provided interactively at the terminal.
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.SH SYNOPSIS
.B cirrus-scope \fI\,<COMMAND>\/\fR
.SH DESCRIPTION
Cirrus Scope Utility
.SS "Commands:"
.TP
auth\-test
Test authentication of a user using MFA
.TP
enrollment\-test
Test device enrollment
.TP
obfuscate
Obfuscate sensitive data from a packet dump
.TP
refresh\-token\-acquire
Acquire a new access token using a refresh token
.TP
provision\-hello\-key\-test
Test provisioning of a Hello for Business key
.TP
version
Show the version of this tool
.TP
help
Print this message or the help of the given subcommand(s)
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help
.PP
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.SH SUBCOMMAND
.B cirrus-scope \fI\,auth-test \/\fR[\fI\,OPTIONS\/\fR] \fI\,--name <ACCOUNT_ID>\/\fR
.SS DESCRIPTION
Test authentication of a user using MFA.
.PP
This command initiates an MFA flow (using FIDO, PhoneAppOTP, etc.) to validate user authentication. It simulates the process of signing in by invoking functions like `fido_auth` and logging detailed debug information if enabled. The provided `account_id` specifies which user account to test.
.SS OPTIONS
.HP
\fB\-d\fR, \fB\-\-debug\fR
.HP
\fB\-D\fR, \fB\-\-name\fR <ACCOUNT_ID>
.HP
\fB\-h\fR, \fB\-\-help\fR
.IP
Print help (see a summary with '\-h')
.PP
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.SH SUBCOMMAND
.B cirrus-scope \fI\,enrollment-test \/\fR[\fI\,OPTIONS\/\fR] \fI\,--name <ACCOUNT_ID>\/\fR
.SS DESCRIPTION
Test device enrollment.
.PP
WARNING! This enrollment leaves artifacts in Entra Id, and does not actually enroll the host! Proceed only if you are capable of cleaning up the `cirrus\-scope\-test\-machine` object from the directory. This command is for investigation and testing purposes only!
.PP
This command performs the device enrollment process by utilizing Soft HSM\-based machine key creation, initiating the MFA enrollment flow, and eventually enrolling the device. Detailed logs are captured when debug mode is enabled, and the `account_id` identifies the target account.
.SS OPTIONS
.HP
\fB\-d\fR, \fB\-\-debug\fR
.HP
\fB\-D\fR, \fB\-\-name\fR <ACCOUNT_ID>
.HP
\fB\-h\fR, \fB\-\-help\fR
.IP
Print help (see a summary with '\-h')
.PP
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.SH SUBCOMMAND
.B cirrus-scope \fI\,obfuscate \/\fR[\fI\,OPTIONS\/\fR] \fI\,--input <INPUT> --output <OUTPUT>\/\fR
.SS DESCRIPTION
Obfuscate sensitive data from a packet dump.
.PP
This command reads a mitmproxy dump file or other captured network traffic, then systematically obfuscates sensitive data to protect privacy and security. It detects and replaces known token types such as JWTs, Kerberos TGTs, flow tokens, device enrollment request blobs, and your Entra ID tenant ID. Exact\-length replacements ensure the resulting dump remains structurally valid for tools like mitmproxy.
.PP
Additionally, you may specify one or more `\-\-custom` strings, each of which will be replaced wherever found in the text with a sequence of asterisks of the same length.
.PP
The obfuscated output is written to the specified file. Enable debug mode to print detailed information about what patterns were matched and replaced.
.PP
NOTE: While this tool makes every reasonable attempt to identify and obfuscate sensitive data\-such as JWTs, Kerberos tickets, flow tokens, request blobs, and your Entra ID tenant ID\-it remains your responsibility to ensure that no secrets remain in the processed file. Passwords and other plaintext credentials are NOT automatically detected and must be explicitly provided via the `\-\-custom` option for obfuscation.
.PP
NOTE: Do not manually edit the file to remove secrets. Manual modifications are very likely to corrupt the structure of the dump, rendering it unreadable for debugging. Always use this tool's obfuscation process to maintain structural integrity of the packet dump.
.SS OPTIONS
.HP
\fB\-d\fR, \fB\-\-debug\fR
.HP
\fB\-\-custom\fR <STRING>
.HP
\fB\-i\fR, \fB\-\-input\fR <INPUT>
.HP
\fB\-o\fR, \fB\-\-output\fR <OUTPUT>
.HP
\fB\-h\fR, \fB\-\-help\fR
.IP
Print help (see a summary with '\-h')
.PP
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.SH SUBCOMMAND
.B cirrus-scope \fI\,provision-hello-key-test \/\fR[\fI\,OPTIONS\/\fR] \fI\,--name <ACCOUNT_ID>\/\fR
.SS DESCRIPTION
Test provisioning of a Hello for Business key.
.PP
WARNING! This key enrollment leaves key artifacts attached to the authenticating user. This does NOT store a Hello key for the user on the device. This command is for investigation and testing purposes only!
.PP
This command provisions a Hello key by generating, storing, and initializing it via TPM. It performs the Hello key creation process needed for secure device authentication. It then validates that Hello key by fetching an access token with a PRT.
.SS OPTIONS
.HP
\fB\-d\fR, \fB\-\-debug\fR
.HP
\fB\-D\fR, \fB\-\-name\fR <ACCOUNT_ID>
.HP
\fB\-h\fR, \fB\-\-help\fR
.IP
Print help (see a summary with '\-h')
.PP
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.SH SUBCOMMAND
.B cirrus-scope \fI\,refresh-token-acquire \/\fR[\fI\,OPTIONS\/\fR] \fI\,--name <ACCOUNT_ID>\/\fR
.SS DESCRIPTION
Acquire a new access token using a refresh token.
.PP
This command tests the token refresh mechanism by acquiring a new access token through an enrollment refresh token. It is designed to verify that the refresh flow works correctly, with optional debug output for tracing the HTTP and token operations. The `account_id` specifies the account under test.
.SS OPTIONS
.HP
\fB\-d\fR, \fB\-\-debug\fR
.HP
\fB\-D\fR, \fB\-\-name\fR <ACCOUNT_ID>
.HP
\fB\-h\fR, \fB\-\-help\fR
.IP
Print help (see a summary with '\-h')
.SH SEE ALSO
.BR aad-tool (1),
.BR himmelblau.conf (5),
.BR himmelblaud (8),
.BR himmelblaud-tasks (8)
.SH AUTHOR
David Mulder <dmulder@himmelblau-idm.org>,
<dmulder@samba.org>
